name: Daily Webshot

on:
  schedule:
    # Runs daily at 15:00 UTC (10:00 AM during CDT, 9:00 AM during CST in America/Chicago)
    - cron: "0 15 * * *"
  workflow_dispatch: {}   # lets you run it manually from the Actions tab

permissions:
  contents: write   # allow the workflow to push commits using GITHUB_TOKEN

jobs:
  snap:
    runs-on: ubuntu-latest
    timeout-minutes: 10

    strategy:
      fail-fast: false
      # Add more URLs here if you want multiple pages snapshotted
      matrix:
        url:
          - "https://example.com"

    steps:
      - name: Check out repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install Puppeteer
        run: |
          npm init -y
          npm i puppeteer@22

      - name: Take screenshot
        id: shot
        run: |
          node - <<'NODE'
          import puppeteer from 'puppeteer';

          // Inputs
          const url = process.env.TARGET_URL;

          // Timestamp like 2025-10-24_10-00-00
          const pad = n => String(n).padStart(2,'0');
          const now = new Date();
          const ts = `${now.getFullYear()}-${pad(now.getMonth()+1)}-${pad(now.getDate())}_${pad(now.getHours())}-${pad(now.getMinutes())}-${pad(now.getSeconds())}`;
          const host = new URL(url).hostname.replace(/[^a-z0-9.-]/gi,'_');
          const dir  = `shots/${host}`;
          const path = `${dir}/${ts}.png`;

          const browser = await puppeteer.launch({ args: ['--no-sandbox'] });
          const page = await browser.newPage();
          await page.setViewport({ width: 1366, height: 768 });
          await page.goto(url, { waitUntil: 'networkidle2', timeout: 45000 });
          // Give client-side apps a moment to finish rendering
          await page.waitForTimeout(1500);
          await page.screenshot({ path, fullPage: true });
          await browser.close();

          console.log("Saved", path);
          NODE
        env:
          TARGET_URL: ${{ matrix.url }}

      - name: Commit & push images
        run: |
          git config user.name  "webshot-bot"
          git config user.email "webshot-bot@users.noreply.github.com"
          git add shots
          # Don't fail if nothing changed (e.g., if a previous run already created a shot at the same second)
          git commit -m "Daily webshot" || echo "Nothing to commit"
          git push
